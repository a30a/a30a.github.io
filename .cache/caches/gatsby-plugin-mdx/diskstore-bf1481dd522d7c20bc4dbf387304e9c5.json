{"expireTime":9007200891665827000,"key":"gatsby-plugin-mdx-entire-payload-c6b333b35fdbe7b5e551c4748012e864-","val":{"mdast":{"type":"root","children":[{"type":"heading","depth":4,"children":[{"type":"text","value":"서지 사항","position":{"start":{"line":2,"column":6,"offset":6},"end":{"line":2,"column":11,"offset":11},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":11,"offset":11},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Jez Humble·David Farle, «Continuous Delivery: reliable software releases through build, test, and deployment automation», Addison-Wesley Professional, 2010.","position":{"start":{"line":4,"column":1,"offset":13},"end":{"line":4,"column":157,"offset":169},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":13},"end":{"line":4,"column":157,"offset":169},"indent":[]}},{"type":"thematicBreak","position":{"start":{"line":6,"column":1,"offset":171},"end":{"line":6,"column":4,"offset":174},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The aim of the deployment pipeline is threefold. First, it makes every part of the process of building, deploying, testing, and releasing software visible to everybody involved, aiding collaboration. Second, it improves feedback so that problems are identified, and so resolved, as early in the process as possible. Finally, it enables teams to deploy and release any version of their software to any environment at will through a fully automated process. - p.4","position":{"start":{"line":8,"column":1,"offset":176},"end":{"line":8,"column":462,"offset":637},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":176},"end":{"line":8,"column":462,"offset":637},"indent":[]}},{"type":"export","value":"export const _frontmatter = {\"title\":\"«Continuous Delivery: reliable software releases through build, test, and deployment automation»\",\"date\":\"2020-06-13T00:00:00.000Z\",\"slug\":\"/page_id=3\"}","position":{"start":{"line":11,"column":1,"offset":640},"end":{"line":11,"column":191,"offset":830},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":11,"column":191,"offset":830}}},"scopeImports":["import * as React from 'react'"],"scopeIdentifiers":["React"],"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"«Continuous Delivery: reliable software releases through build, test, and deployment automation»\",\n  \"date\": \"2020-06-13T00:00:00.000Z\",\n  \"slug\": \"/page_id=3\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h4\", null, \"\\uC11C\\uC9C0 \\uC0AC\\uD56D\"), mdx(\"p\", null, \"Jez Humble\\xB7David Farle, \\xABContinuous Delivery: reliable software releases through build, test, and deployment automation\\xBB, Addison-Wesley Professional, 2010.\"), mdx(\"hr\", null), mdx(\"p\", null, \"The aim of the deployment pipeline is threefold. First, it makes every part of the process of building, deploying, testing, and releasing software visible to everybody involved, aiding collaboration. Second, it improves feedback so that problems are identified, and so resolved, as early in the process as possible. Finally, it enables teams to deploy and release any version of their software to any environment at will through a fully automated process. - p.4\"));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"title\": \"«Continuous Delivery: reliable software releases through build, test, and deployment automation»\",\n  \"date\": \"2020-06-13T00:00:00.000Z\",\n  \"slug\": \"/page_id=3\"\n};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h4>{`서지 사항`}</h4>\n    <p>{`Jez Humble·David Farle, «Continuous Delivery: reliable software releases through build, test, and deployment automation», Addison-Wesley Professional, 2010.`}</p>\n    <hr></hr>\n    <p>{`The aim of the deployment pipeline is threefold. First, it makes every part of the process of building, deploying, testing, and releasing software visible to everybody involved, aiding collaboration. Second, it improves feedback so that problems are identified, and so resolved, as early in the process as possible. Finally, it enables teams to deploy and release any version of their software to any environment at will through a fully automated process. - p.4`}</p>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}